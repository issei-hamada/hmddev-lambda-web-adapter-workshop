AWSTemplateFormatVersion: '2010-09-09'
Description: 'Sample app for Lambda Web Adapter'

Parameters:
  ImageUri:
    Type: String
    Description: ECR Image URI for the Lambda function

Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: /
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"

  ApiFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub '${AWS::StackName}-ApiFunction'
      PackageType: Image
      Code:
        ImageUri: !Ref ImageUri
      MemorySize: 256
      Timeout: 60
      Role: !GetAtt LambdaRole.Arn
      Environment:
        Variables:
          CONNPASS_API_KEY: '{{resolve:ssm:CONNPASS_API_KEY}}'

  ApiLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${ApiFunction}'
      RetentionInDays: 90

  # API Gateway v2 (HTTP API)
  HttpApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: !Sub '${AWS::StackName}-HttpApi'
      ProtocolType: HTTP

  # Lambda Permission for API Gateway
  ApiInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ApiFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpApi}/*/*'

  # API Gateway Integration
  ApiIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref HttpApi
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ApiFunction.Arn}/invocations'
      PayloadFormatVersion: '2.0'

  # API Gateway Route
  ApiRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref HttpApi
      RouteKey: '$default'
      Target: !Sub 'integrations/${ApiIntegration}'

  # API Gateway Stage
  ApiStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref HttpApi
      StageName: '$default'
      AutoDeploy: true

Outputs:
  ApiURL:
    Description: "API Gateway endpoint URL for the Lambda function"
    Value: !Sub "https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/"
  FunctionName:
    Description: "Lambda Function Name"
    Value: !Ref ApiFunction
  FunctionArn:
    Description: "Lambda Function ARN"
    Value: !GetAtt ApiFunction.Arn